pool:
  vmImage: 'Ubuntu 16.04'

trigger:
  branches:
    include:
      - master
      - feature/*
      - bug/*

pr:
  branches:
    include:
      - master

steps:
  - checkout: self
    persistCredentials: true
    clean: true

  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.6
      architecture: 'x64'

  - script: |
      python --version
      pip --version
      pip install awscli
    displayName: 'Environment Preperation'

  - script: |
      mkdir .tmp
      cd .tmp
      aws s3 cp s3://vizcentric-pipeline-secrets/settings.xml .
      mkdir ~/.m2
      cp ./settings.xml ~/.m2/settings.xml
      cd ../
    env:
      AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
      AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
    displayName: 'Get Secrets'

  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      goals: '-Pprod package'
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
    displayName: 'Build'

  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      goals: '-Pprod deploy'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    displayName: 'Build and deploy'

  - script: |
      git checkout master
      git config user.name "Release Bot"
      git config user.email "admin@vizcentric.com"
      mvn -B release:clean release:prepare release:perform -Dusername=${GIT_USERNAME} -Dpassword=${GIT_PASSWORD} "-DscmCommentPrefix=[skip ci] "
    env:
      GIT_USERNAME: $(GIT_USERNAME)
      GIT_PASSWORD: $(GIT_PASSWORD)
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    displayName: 'Release'

  - script: |
      export $(grep -v '^#' ./target/maven-archiver/pom.properties | xargs)
      docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      docker push flairbi/$artifactId:v$version
      docker tag flairbi/$artifactId:v$version flairbi/$artifactId:latest
      docker push flairbi/$artifactId:latest
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    env:
      DOCKER_USER: $(dockerUser)
      DOCKER_PASSWORD: $(dockerPassword)
    displayName: 'Upload Docker image'